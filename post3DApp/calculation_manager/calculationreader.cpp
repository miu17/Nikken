#include "calculationreader.h"

#include "abstractwrite.h"
#include "linecalculation.h"
#include "textdataunit.h"

namespace post3dapp{
QList<LineCalculation*> CalculationReader::conditions =
        QList<LineCalculation*>{
        new LineCalculation(WriteOutgroupp::Command,
                       CalculationStatus::OutgroupP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOutgroupp::Command.length()}}),
        new LineCalculation(WriteOutgroups::Command,
                       CalculationStatus::OutgroupS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOutgroups::Command.length()}}),
// 1章
        new LineCalculation(WriteCover::Command,
                       CalculationStatus::Cover,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCover::Command.length()}}),
        new LineCalculation(WriteOrganize::Command,
                       CalculationStatus::Organize,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOrganize::Command.length()}}),
        new LineCalculation(WriteOutline::Command,
                       CalculationStatus::Outline,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOutline::Command.length()}}),
        new LineCalculation(WritePlan::Command,
                       CalculationStatus::Plan,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePlan::Command.length()}}),
        new LineCalculation(WriteSection::Command,
                       CalculationStatus::Section,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteSection::Command.length()}}),
        new LineCalculation(WriteLsgir::Command,
                       CalculationStatus::Lsgir,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsgir::Command.length()}}),
        new LineCalculation(WriteLscol::Command,
                       CalculationStatus::Lscol,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLscol::Command.length()}}),
        new LineCalculation(WriteLswal::Command,
                       CalculationStatus::Lswal,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLswal::Command.length()}}),
        new LineCalculation(WriteLsswa::Command,
                       CalculationStatus::Lsswa,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsswa::Command.length()}}),
        new LineCalculation(WriteLsfwa::Command,
                       CalculationStatus::Lsfwa,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsfwa::Command.length()}}),
        new LineCalculation(WriteLsbra::Command,
                       CalculationStatus::Lsbra,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsbra::Command.length()}}),
        new LineCalculation(WriteLsbeam::Command,
                       CalculationStatus::Lsbeam,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsbeam::Command.length()}}),
        new LineCalculation(WriteLsslab::Command,
                       CalculationStatus::Lsslab,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsslab::Command.length()}}),
        new LineCalculation(WriteLsopen::Command,
                       CalculationStatus::Lsopen,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsopen::Command.length()}}),
        new LineCalculation(WriteLsbs::Command,
                       CalculationStatus::Lsbs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsbs::Command.length()}}),
        new LineCalculation(WriteLsbsrc::Command,
                       CalculationStatus::Lsbsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsbsrc::Command.length()}}),
        new LineCalculation(WriteLsdamp::Command,
                       CalculationStatus::Lsdamp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsdamp::Command.length()}}),
        new LineCalculation(WriteLsmen::Command,
                       CalculationStatus::Lsmen,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLsmen::Command.length()}}),
        new LineCalculation(WriteAlist::Command,
                       CalculationStatus::Alist,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteAlist::Command.length()}}),
// 2章
        new LineCalculation(WriteCalc::Command,
                       CalculationStatus::Calc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCalc::Command.length()}}),
        new LineCalculation(WriteStnd::Command,
                       CalculationStatus::Stnd,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteStnd::Command.length()}}),
        new LineCalculation(WriteStt::Command,
                       CalculationStatus::Stt,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteStt::Command.length()}}),
        new LineCalculation(WriteMatc::Command,
                       CalculationStatus::Matc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMatc::Command.length()}}),
        new LineCalculation(WriteMatr::Command,
                       CalculationStatus::Matr,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMatr::Command.length()}}),
        new LineCalculation(WriteMats::Command,
                       CalculationStatus::Mats,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMats::Command.length()}}),
// 3章
        new LineCalculation(WriteCcs::Command,
                       CalculationStatus::Ccs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCcs::Command.length()}}),
        new LineCalculation(WritePolicyld::Command,
                       CalculationStatus::Policyld,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicyld::Command.length()}}),
        new LineCalculation(WriteLdl::Command,
                       CalculationStatus::Ldl,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLdl::Command.length()}}),
        new LineCalculation(WriteLdf::Command,
                       CalculationStatus::Ldf,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLdf::Command.length()}}),
        new LineCalculation(WriteLdm::Command,
                       CalculationStatus::Ldm,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLdm::Command.length()}}),
        new LineCalculation(WriteLdj::Command,
                       CalculationStatus::Ldj,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLdj::Command.length()}}),
        new LineCalculation(WriteSnow::Command,
                       CalculationStatus::Snow,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteSnow::Command.length()}}),
        new LineCalculation(WriteWind::Command,
                       CalculationStatus::Wind,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteWind::Command.length()}}),
        new LineCalculation(WriteOther::Command,
                       CalculationStatus::Other,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOther::Command.length()}}),
        new LineCalculation(WriteLplan::Command,
                       CalculationStatus::Lplan,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLplan::Command.length()}}),
        new LineCalculation(WriteSeisle::Command,
                       CalculationStatus::Seisle,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteSeisle::Command.length()}}),
        new LineCalculation(WriteLcmqp::Command,
                       CalculationStatus::Lcmqp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLcmqp::Command.length()}}),
        new LineCalculation(WriteLcmqs::Command,
                       CalculationStatus::Lcmqs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteLcmqs::Command.length()}}),
        new LineCalculation(WriteJmassp::Command,
                       CalculationStatus::Jmassp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteJmassp::Command.length()}}),
        new LineCalculation(WriteJmasss::Command,
                       CalculationStatus::Jmasss,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteJmasss::Command.length()}}),
        new LineCalculation(WriteEstim::Command,
                       CalculationStatus::Estim,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteEstim::Command.length()}}),
// 4章
        new LineCalculation(WritePolicyec::Command,
                       CalculationStatus::Policyec,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicyec::Command.length()}}),
        new LineCalculation(WriteCmodel::Command,
                       CalculationStatus::Cmodel,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCmodel::Command.length()}}),
        new LineCalculation(WriteEmodel::Command,
                       CalculationStatus::Emodel,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteEmodel::Command.length()}}),
        new LineCalculation(WriteModelp::Command,
                       CalculationStatus::ModelP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteModelp::Command.length()}}),
        new LineCalculation(WriteModels::Command,
                       CalculationStatus::ModelS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteModels::Command.length()}}),
        new LineCalculation(WriteMphaip::Command,
                       CalculationStatus::MphaiP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMphaip::Command.length()}}),
        new LineCalculation(WriteMphais::Command,
                       CalculationStatus::MphaiS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMphais::Command.length()}}),
        new LineCalculation(WriteMrlp::Command,
                       CalculationStatus::MrlP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMrlp::Command.length()}}),
        new LineCalculation(WriteMrls::Command,
                       CalculationStatus::MrlS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMrls::Command.length()}}),
        new LineCalculation(WriteMclp::Command,
                       CalculationStatus::MclP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMclp::Command.length()}}),
        new LineCalculation(WriteMcls::Command,
                       CalculationStatus::MclS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMcls::Command.length()}}),
        new LineCalculation(WriteMblp::Command,
                       CalculationStatus::MblP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMblp::Command.length()}}),
        new LineCalculation(WriteMbls::Command,
                       CalculationStatus::MblS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMbls::Command.length()}}),
        new LineCalculation(WriteAnacon::Command,
                       CalculationStatus::Anacon,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteAnacon::Command.length()}}),
        new LineCalculation(WriteRfloor::Command,
                       CalculationStatus::Rfloor,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRfloor::Command.length()}}),
        new LineCalculation(WriteJspring::Command,
                       CalculationStatus::Jspring,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteJspring::Command.length()}}),
        new LineCalculation(WriteMspring::Command,
                       CalculationStatus::Mspring,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMspring::Command.length()}}),
        new LineCalculation(WriteMdetail::Command,
                       CalculationStatus::Mdetail,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMdetail::Command.length()},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 9, 20, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false},
                            }),
        new LineCalculation(WriteAutophai::Command,
                       CalculationStatus::Autophai,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteAutophai::Command.length()}}),
        new LineCalculation(WriteAutolk::Command,
                       CalculationStatus::Autolk,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteAutolk::Command.length()}}),
        new LineCalculation(WriteJnt::Command,
                       CalculationStatus::Jnt,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteJnt::Command.length()}}),
        new LineCalculation(WriteIndex::Command,
                       CalculationStatus::Index,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteIndex::Command.length()}}),
        new LineCalculation(WriteFrame::Command,
                       CalculationStatus::Frame,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteFrame::Command.length()}}),
        new LineCalculation(WritePnlmdl::Command,
                       CalculationStatus::Pnlmdl,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePnlmdl::Command.length()}}),
// 5章
        new LineCalculation(WriteOutcs::Command,
                       CalculationStatus::Outcs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOutcs::Command.length()}}),
        new LineCalculation(WriteVjstrp::Command,
                       CalculationStatus::VjstrP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteVjstrp::Command.length()}}),
        new LineCalculation(WriteVjstrs::Command,
                       CalculationStatus::VjstrS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteVjstrs::Command.length()}}),
        new LineCalculation(WriteVfstrp::Command,
                       CalculationStatus::VfstrP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteVfstrp::Command.length()}}),
        new LineCalculation(WriteVfstrs::Command,
                       CalculationStatus::VfstrS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteVfstrs::Command.length()}}),
        new LineCalculation(WriteHratio::Command,
                       CalculationStatus::Hratio,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteHratio::Command.length()}}),
        new LineCalculation(WriteHjstrp::Command,
                       CalculationStatus::HjstrP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteHjstrp::Command.length()}}),
        new LineCalculation(WriteHjstrs::Command,
                       CalculationStatus::HjstrS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteHjstrs::Command.length()}}),
        new LineCalculation(WriteHfstrp::Command,
                       CalculationStatus::HfstrP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteHfstrp::Command.length()}}),
        new LineCalculation(WriteHfstrs::Command,
                       CalculationStatus::HfstrS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteHfstrs::Command.length()}}),
        new LineCalculation(WriteCrez::Command,
                       CalculationStatus::Crez,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCrez::Command.length()}}),
        new LineCalculation(WriteReact::Command,
                       CalculationStatus::React,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteReact::Command.length()}}),
        new LineCalculation(WriteStstiff::Command,
                       CalculationStatus::Ststiff,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteStstiff::Command.length()}}),
        new LineCalculation(WriteFrstiff::Command,
                       CalculationStatus::Frstiff,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteFrstiff::Command.length()}}),
        new LineCalculation(WriteFrdist::Command,
                       CalculationStatus::Frdist,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteFrdist::Command.length()}}),
        new LineCalculation(WriteQmap::Command,
                       CalculationStatus::Qmap,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQmap::Command.length()}}),
// 6章
        new LineCalculation(WritePolicych::Command,
                       CalculationStatus::Policych,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicych::Command.length()}}),
        new LineCalculation(WriteChcase::Command,
                       CalculationStatus::Chcase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChcase::Command.length()}}),
        new LineCalculation(WriteChvp::Command,
                       CalculationStatus::ChvP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChvp::Command.length()}}),
        new LineCalculation(WriteChvs::Command,
                       CalculationStatus::ChvS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChvs::Command.length()}}),
        new LineCalculation(WriteChhp::Command,
                       CalculationStatus::ChhP,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChhp::Command.length()}}),
        new LineCalculation(WriteChhs::Command,
                       CalculationStatus::ChhS,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChhs::Command.length()}}),
        new LineCalculation(WriteChlistm::Command,
                       CalculationStatus::Chlistm,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChlistm::Command.length()}}),
        new LineCalculation(WriteChlistq::Command,
                       CalculationStatus::Chlistq,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChlistq::Command.length()}}),
        new LineCalculation(WriteChcol::Command,
                       CalculationStatus::Chcol,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChcol::Command.length()}}),
        new LineCalculation(WriteChgir::Command,
                       CalculationStatus::Chgir,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChgir::Command.length()}}),
        new LineCalculation(WriteChwal::Command,
                       CalculationStatus::Chwal,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChwal::Command.length()}}),
        new LineCalculation(WriteChbra::Command,
                       CalculationStatus::Chbra,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChbra::Command.length()}}),
        new LineCalculation(WriteChopen::Command,
                       CalculationStatus::Chopen,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChopen::Command.length()}}),
        new LineCalculation(WriteChps2::Command,
                       CalculationStatus::Chps2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChps2::Command.length()}}),
        new LineCalculation(WriteChprc2::Command,
                       CalculationStatus::Chprc2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChprc2::Command.length()}}),
        new LineCalculation(WriteChpsrc2::Command,
                       CalculationStatus::Chpsrc2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChpsrc2::Command.length()}}),
        new LineCalculation(WriteChpcft2::Command,
                       CalculationStatus::Chpcft2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChpcft2::Command.length()}}),
        new LineCalculation(WriteChps3::Command,
                       CalculationStatus::Chps3,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChps3::Command.length()}}),
        new LineCalculation(WriteChprc3::Command,
                       CalculationStatus::Chprc3,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChprc3::Command.length()}}),
        new LineCalculation(WriteChpsrc3::Command,
                       CalculationStatus::Chpsrc3,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChpsrc3::Command.length()}}),
        new LineCalculation(WriteChpcft3::Command,
                       CalculationStatus::Chpcft3,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChpcft3::Command.length()}}),
        new LineCalculation(WriteChsrcbase::Command,
                       CalculationStatus::Chsrcbase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChsrcbase::Command.length()}}),
        new LineCalculation(WriteChsbase::Command,
                       CalculationStatus::Chsbase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChsbase::Command.length()}}),
        new LineCalculation(WriteChneobase::Command,
                       CalculationStatus::Chneobase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChneobase::Command.length()}}),
        new LineCalculation(WriteChnewbase::Command,
                       CalculationStatus::Chnewbase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChnewbase::Command.length()}}),
        new LineCalculation(WriteChbpbase::Command,
                       CalculationStatus::Chbpbase,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChbpbase::Command.length()}}),
        new LineCalculation(WriteChcutoff::Command,
                       CalculationStatus::Chcutoff,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChcutoff::Command.length()}}),
        new LineCalculation(WriteChbondl1::Command,
                       CalculationStatus::Chbondl1,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChbondl1::Command.length()}}),
        new LineCalculation(WriteChbonds1::Command,
                       CalculationStatus::Chbonds1,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChbonds1::Command.length()}}),
        new LineCalculation(WriteChbonds2::Command,
                       CalculationStatus::Chbonds2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteChbonds2::Command.length()}}),
// 7章
        new LineCalculation(WritePolicyf::Command,
                       CalculationStatus::Policyf,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicyf::Command.length()}}),
// 8章
        new LineCalculation(WritePolicystec::Command,
                       CalculationStatus::Policystec,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicystec::Command.length()}}),
        new LineCalculation(WriteMxdfrm::Command,
                       CalculationStatus::Mxdfrm,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMxdfrm::Command.length()}}),
        new LineCalculation(WritePrestec::Command,
                       CalculationStatus::Prestec,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePrestec::Command.length()}}),
        new LineCalculation(WriteGckcp::Command,
                       CalculationStatus::Gckcp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteGckcp::Command.length()}}),
/*
                new LineCalculation(WritePrestec::Command,
                               CalculationStatus::Prestec,
                               QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePrestec::Command.length()}}),
                new LineCalculation(WriteGckcp::Command,
                               CalculationStatus::Gckcp,
                               QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteGckcp::Command.length()}}),
*/
        new LineCalculation(WriteStecf::Command,
                       CalculationStatus::Stecf,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteStecf::Command.length()}}),
        new LineCalculation(WriteCwarea::Command,
                       CalculationStatus::Cwarea,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCwarea::Command.length()}}),
        new LineCalculation(WriteCgcmp1::Command,
                       CalculationStatus::Cgcmp1,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCgcmp1::Command.length()}}),
// 9章
        new LineCalculation("*QUDS",
                             CalculationStatus::Quds,
                             QList<TextDataUnit>{
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 5}
                             }),
        new LineCalculation("CASE",
                             CalculationStatus::QudsCase,
                             QList<TextDataUnit>{
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 4},
                                 TextDataUnit{TEXTTYPE::TYPE_BLANK, 5, 10},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true}
                             },
                             QList<CalculationStatus>{
                                      CalculationStatus::Quds,
                                      CalculationStatus::QudsGrid,
                                  }),
        new LineCalculation("FLOOR",
                             CalculationStatus::QudsFloor,
                             QList<TextDataUnit>{
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 5},
                                 TextDataUnit{TEXTTYPE::TYPE_BLANK, 6, 10},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false},
                             },
                             QList<CalculationStatus>{
                                      CalculationStatus::QudsCase,
                                  }),
        new LineCalculation("GRID",
                             CalculationStatus::QudsGrid,
                             QList<TextDataUnit>{
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 4},
                                 TextDataUnit{TEXTTYPE::TYPE_BLANK, 5, 10},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                 TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false},
                             },
                             QList<CalculationStatus>{
                                      CalculationStatus::QudsFloor,
                                  }),
        new LineCalculation(WriteSeislp::Command,
                       CalculationStatus::Seislp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteSeislp::Command.length()}}),
        new LineCalculation(WritePolicypc::Command,
                       CalculationStatus::Policypc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicypc::Command.length()}}),
        new LineCalculation(WritePmodel::Command,
                       CalculationStatus::Pmodel,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePmodel::Command.length()}}),
        new LineCalculation(WriteDspush::Command,
                       CalculationStatus::Dspush,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDspush::Command.length()}}),
        new LineCalculation(WriteDsgene::Command,
                       CalculationStatus::Dsgene,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDsgene::Command.length()}}),
        new LineCalculation(WriteDsstep::Command,
                       CalculationStatus::Dsstep,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDsstep::Command.length()}}),
        new LineCalculation(WriteDscurve::Command,
                       CalculationStatus::Dscurve,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDscurve::Command.length()}}),
        new LineCalculation(WriteDsstr::Command,
                       CalculationStatus::Dsstr,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDsstr::Command.length()}}),
        new LineCalculation(WriteDscond::Command,
                       CalculationStatus::Dscond,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDscond::Command.length()}}),
        new LineCalculation(WriteMrnk::Command,
                       CalculationStatus::Mrnk,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMrnk::Command.length()}}),
        new LineCalculation(WriteRncs::Command,
                       CalculationStatus::Rncs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRncs::Command.length()}}),
        new LineCalculation(WriteRncrc::Command,
                       CalculationStatus::Rncrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRncrc::Command.length()}}),
        new LineCalculation(WriteRncsrc::Command,
                       CalculationStatus::Rncsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRncsrc::Command.length()}}),
        new LineCalculation(WriteRnccft::Command,
                       CalculationStatus::Rnccft,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRnccft::Command.length()}}),
        new LineCalculation(WriteRngs::Command,
                       CalculationStatus::Rngs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRngs::Command.length()}}),
        new LineCalculation(WriteRngrc::Command,
                       CalculationStatus::Rngrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRngrc::Command.length()}}),
        new LineCalculation(WriteRngsrc::Command,
                       CalculationStatus::Rngsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRngsrc::Command.length()}}),
        new LineCalculation(WriteRnvs::Command,
                       CalculationStatus::Rnvs,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRnvs::Command.length()}}),
        new LineCalculation(WriteRnwrc::Command,
                       CalculationStatus::Rnwrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRnwrc::Command.length()}}),
        new LineCalculation(WriteRnwsrc::Command,
                       CalculationStatus::Rnwsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRnwsrc::Command.length()}}),
        new LineCalculation(WriteRnprc::Command,
                       CalculationStatus::Rnprc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteRnprc::Command.length()}}),
        new LineCalculation(WriteGrbend::Command,
                       CalculationStatus::Grbend,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteGrbend::Command.length()}}),
        new LineCalculation(WriteGrbondi::Command,
                       CalculationStatus::Grbondi,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteGrbondi::Command.length()}}),
        new LineCalculation(WriteGrbondp::Command,
                       CalculationStatus::Grbondp,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteGrbondp::Command.length()}}),
        new LineCalculation(WriteYokohogou::Command,
                       CalculationStatus::Yokohogou,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteYokohogou::Command.length()}}),
        new LineCalculation(WriteDssh::Command,
                       CalculationStatus::Dssh,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDssh::Command.length()}}),
        new LineCalculation(WriteDsmu::Command,
                       CalculationStatus::Dsmu,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDsmu::Command.length()}}),
        new LineCalculation(WriteQupush::Command,
                       CalculationStatus::Qupush,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQupush::Command.length()}}),
        new LineCalculation(WriteQugene::Command,
                       CalculationStatus::Qugene,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQugene::Command.length()}}),
        new LineCalculation(WriteQustep::Command,
                       CalculationStatus::Qustep,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQustep::Command.length()}}),
        new LineCalculation(WriteQucurve::Command,
                       CalculationStatus::Qucurve,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQucurve::Command.length()}}),
        new LineCalculation(WriteQucond::Command,
                       CalculationStatus::Qucond,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQucond::Command.length()}}),
        new LineCalculation(WriteQudetrm::Command,
                       CalculationStatus::Qudetrm,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQudetrm::Command.length()}}),
        new LineCalculation(WriteQustr::Command,
                       CalculationStatus::Qustr,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQustr::Command.length()}}),
        new LineCalculation(WriteQucrc::Command,
                       CalculationStatus::Qucrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQucrc::Command.length()}}),
        new LineCalculation(WriteQucsrc::Command,
                       CalculationStatus::Qucsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQucsrc::Command.length()}}),
        new LineCalculation(WriteQugrc::Command,
                       CalculationStatus::Qugrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQugrc::Command.length()}}),
        new LineCalculation(WriteQugsrc::Command,
                       CalculationStatus::Qugsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQugsrc::Command.length()}}),
        new LineCalculation(WriteQuwrc::Command,
                       CalculationStatus::Quwrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQuwrc::Command.length()}}),
        new LineCalculation(WriteQuwsrc::Command,
                       CalculationStatus::Quwsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQuwsrc::Command.length()}}),
        new LineCalculation(WriteQups::Command,
                       CalculationStatus::Qups,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQups::Command.length()}}),
        new LineCalculation(WriteQuprc::Command,
                       CalculationStatus::Quprc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQuprc::Command.length()}}),
        new LineCalculation(WriteQupsrc::Command,
                       CalculationStatus::Qupsrc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQupsrc::Command.length()}}),
        new LineCalculation(WriteQupcft::Command,
                       CalculationStatus::Qupcft,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQupcft::Command.length()}}),
        new LineCalculation(WriteQush::Command,
                       CalculationStatus::Qush,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQush::Command.length()}}),
        new LineCalculation(WriteDsqucurve::Command,
                       CalculationStatus::Dsqucurve,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteDsqucurve::Command.length()}}),
        new LineCalculation(WriteQuneedf::Command,
                       CalculationStatus::Quneedf,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQuneedf::Command.length()}}),
        new LineCalculation(WriteCgcmpm::Command,
                       CalculationStatus::Cgcmpm,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCgcmpm::Command.length()}}),
        new LineCalculation(WriteCgcmpf::Command,
                       CalculationStatus::Cgcmpf,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteCgcmpf::Command.length()}}),
        new LineCalculation(WriteMbcpr::Command,
                       CalculationStatus::Mbcpr,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMbcpr::Command.length()}}),
        new LineCalculation(WriteQbcpr::Command,
                       CalculationStatus::Qbcpr,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQbcpr::Command.length()}}),
        new LineCalculation(WriteMult::Command,
                       CalculationStatus::Mult,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMult::Command.length()}}),
// 10章
        new LineCalculation(WritePrograme::Command,
                       CalculationStatus::Programe,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePrograme::Command.length()}}),
        new LineCalculation(WriteMessage::Command,
                       CalculationStatus::Message,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteMessage::Command.length()}}),
        new LineCalculation(WriteOpinionc::Command,
                       CalculationStatus::Opinionc,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOpinionc::Command.length()}}),
        new LineCalculation(WriteOpinion::Command,
                       CalculationStatus::Opinion,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteOpinion::Command.length()}}),
        new LineCalculation(WriteContents2::Command,
                       CalculationStatus::Contents2,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteContents2::Command.length()}}),
/*  先行マッチを避けるために順番変更*/
        new LineCalculation(WritePolicy::Command,
                       CalculationStatus::Policy,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WritePolicy::Command.length()}}), // 2章
        new LineCalculation(WriteQuneed::Command,
                       CalculationStatus::Quneed,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQuneed::Command.length()}}), // 9章
        new LineCalculation(WriteQun::Command,
                       CalculationStatus::Qun,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteQun::Command.length()}}), // 9章
        new LineCalculation(WriteContents::Command,
                       CalculationStatus::Contents,
                       QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, WriteContents::Command.length()}}), // 10章

/* Area指定 */
        new LineCalculation("-",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 1},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 2, 10},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::OutgroupP,
                                CalculationStatus::OutgroupS,
                                CalculationStatus::QudsFloor,
                                CalculationStatus::QudsGrid,
                                CalculationStatus::Lcmqp,
                                CalculationStatus::Lcmqs,
                                CalculationStatus::ModelP,
                                CalculationStatus::ModelS,
                                CalculationStatus::MphaiP,
                                CalculationStatus::MphaiS,
                                CalculationStatus::MrlP,
                                CalculationStatus::MrlS,
                                CalculationStatus::VjstrP,
                                CalculationStatus::VjstrS,
                                CalculationStatus::VfstrP,
                                CalculationStatus::VfstrS,
                                CalculationStatus::HjstrP,
                                CalculationStatus::HjstrS,
                                CalculationStatus::HfstrP,
                                CalculationStatus::HfstrS,
                                CalculationStatus::React,
                                CalculationStatus::Qmap,
                                CalculationStatus::ChvP,
                                CalculationStatus::ChvS,
                                CalculationStatus::ChhP,
                                CalculationStatus::ChhS,
                            }), // OUTGROUP, STRESS, MODEL, CHECK, QudsFloor, QudsGrid
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 10, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::OutgroupP,
                                CalculationStatus::OutgroupS,
                                CalculationStatus::Lcmqp,
                                CalculationStatus::Lcmqs,
                                CalculationStatus::ModelP,
                                CalculationStatus::ModelS,
                                CalculationStatus::MphaiP,
                                CalculationStatus::MphaiS,
                                CalculationStatus::MrlP,
                                CalculationStatus::MrlS,
                                CalculationStatus::VjstrP,
                                CalculationStatus::VjstrS,
                                CalculationStatus::VfstrP,
                                CalculationStatus::VfstrS,
                                CalculationStatus::HjstrP,
                                CalculationStatus::HjstrS,
                                CalculationStatus::HfstrP,
                                CalculationStatus::HfstrS,
                                CalculationStatus::React,
                                CalculationStatus::Qmap,
                                CalculationStatus::ChvP,
                                CalculationStatus::ChvS,
                                CalculationStatus::ChhP,
                                CalculationStatus::ChhS,
                            }), // OUTGROUP, STRESS, MODEL, CHECK
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 6, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 7, 26, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Dsgene,
                                CalculationStatus::Dsstep,
                                CalculationStatus::Qugene,
                                CalculationStatus::Qustep
                            }), // DSQU,
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 10, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                TextDataUnit{TEXTTYPE::TYPE_DOUBLE, 21, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_DOUBLE, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_DOUBLE, 61, 70, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Ccs
                            }), // CCS,
        new LineCalculation("-",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 1, true},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 2, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_DOUBLE, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_DOUBLE, 61, 70, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Ccs
                            }), // CCS,
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 10, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Plan,
                                CalculationStatus::Section,
                                CalculationStatus::Lplan,
                                CalculationStatus::Jmassp,
                                CalculationStatus::Jmasss,
                                CalculationStatus::MclP,
                                CalculationStatus::MclS,
                                CalculationStatus::MblP,
                                CalculationStatus::MblS,
                                CalculationStatus::Gckcp,
                            }), // NAME
        new LineCalculation("C",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 1},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 2, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Chcol,
                                CalculationStatus::Chgir,
                                CalculationStatus::Chwal,
                                CalculationStatus::Chbra,
                            }), // DETAIL
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 1, 20},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 26, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 27, 32, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 33, 38, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 39, 44, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 45, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 56, false},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 57, 58, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 59, 74, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Chcol,
                                CalculationStatus::Chgir,
                                CalculationStatus::Chwal,
                                CalculationStatus::Chbra,
                            }), // DETAIL
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 6, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 7, 26, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Dsgene,
                                CalculationStatus::Dsstep,
                                CalculationStatus::Qugene,
                                CalculationStatus::Qustep,
                            }), // DSQU
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 1, 2, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 3, 4, true},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 5, 6, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 7, 66, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Outline,
                            }), // OUTLINE
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 20, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 26, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 27, 32, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 33, 38, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 39, 44, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 45, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 56, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 57, 62, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 63, 68, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 69, 74, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 75, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Mdetail,
                            }), // MDETAIL
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 10, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 11, 20, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 21, 30, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}
                             },
                       QList<CalculationStatus>{
                                CalculationStatus::Crez
                            }), // CREZ,
        new LineCalculation("-",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 1, true},
                                TextDataUnit{TEXTTYPE::TYPE_BLANK, 2, 30, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 31, 40, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 41, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 60, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 61, 70, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 71, 80, false}
                             },
                       QList<CalculationStatus>{
                                CalculationStatus::Crez
                            }), // CREZ,
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 6, true},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 7, 26, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 27, 32, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 33, 38, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 39, 44, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 45, 50, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 51, 56, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 57, 62, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 63, 68, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 69, 74, false},
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 75, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Mult,
                            }), // MULT
        new LineCalculation("",
                       CalculationStatus::Skip,
                       QList<TextDataUnit>{
                                TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 80, false}},
                       QList<CalculationStatus>{
                                CalculationStatus::Calc,
                                CalculationStatus::Stnd,
                                CalculationStatus::Policy,
                                CalculationStatus::Snow,
                                CalculationStatus::Wind,
                                CalculationStatus::Other,
                                CalculationStatus::Policyf,
                                CalculationStatus::Programe,
                                CalculationStatus::Opinionc,
                                CalculationStatus::Opinion,
                            }), // CUSTOM
};

LineCalculation* CalculationReader::CheckLineCondition(const QString& text, CalculationStatus status, bool* isOk){
    LineCalculation* condition = MatchLineCondition(text, status, isOk);
    if (!*isOk)
        return nullptr;

    if (condition == nullptr)
        return nullptr;

    if (condition->hasFormatError(text)){
        *isOk = false;
        return nullptr;
    }
    return condition;
}

LineCalculation* CalculationReader::MatchLineCondition(const QString &text, CalculationStatus status, bool* isOk){
    *isOk = false;
    if (text.startsWith("!")){
        *isOk = true;
        return nullptr;
    }
    if (text.startsWith("*END")){
        *isOk = true;
        return new LineCalculation("*END",
                             CalculationStatus::End,
                             QList<TextDataUnit>{TextDataUnit{TEXTTYPE::TYPE_TEXT, 1, 4}});
    }

    Q_FOREACH(auto condition, conditions){
        if (condition->MatchKeyword(status, text)){
            *isOk = true;
            return condition;
        }
    }
    return nullptr;
}

bool CalculationReader::hasFormatError(const QString& plainText){
    if (plainText == QString())
        return false;

    QStringList list = plainText.split("\n");
    CalculationStatus status = CalculationStatus::None;
    bool isOk = true;

    Q_FOREACH(auto str, list){
        LineCalculation* condition = CheckLineCondition(str, status, &isOk);
        if (!isOk)
            return true;

        if (condition == nullptr)
            continue;

        if (condition->getStatus() != CalculationStatus::Skip)
            status = condition->getStatus();

        if (status == CalculationStatus::End)
            return false;
    }
    return false;
}

} // namespace post3dapp
